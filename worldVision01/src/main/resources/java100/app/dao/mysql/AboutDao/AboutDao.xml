<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 객체를 자동으로 생성하려면, namespace의 값이 인터페이스 이름과 같아야 한다. -->
<mapper namespace="java100.app.dao.AboutDao.AboutDao">

	<resultMap type="about" id="about">
		<id column="no" property="no" />
		<!-- 컬럼 이름과 프로퍼티 이름이 같아서 생략! -->
		<!-- <result column="name" property="name"/> <result column="email" property="email"/> -->
	</resultMap>

	<sql id="select1">
		select
		*
	</sql>
	<!-- 국내 -->
	<select id="findAll" resultMap="about" parameterType="map">
		<include refid="select1" />
		from bluead_history

		<choose>
			<when test="select == 'all'">
				<where> <!-- 이름, 아이디 -->
					or contents like '%${word}%'

				</where>
			</when>

			<when test="select == 'contents'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or contents like
							'%${word}%'
						</foreach>
					</where>
				</if>
			</when>

		</choose>
		order by no desc
		limit #{startIndex}, #{size}

	</select>


	<!-- 국외 -->
	<select id="findAll2" resultMap="about" parameterType="map">
		<include refid="select1" />
		from bluead_history
		<choose>
			<when test="select == 'all'">
				<where> <!-- 내용 -->
					or contents like '%${word}%'

				</where>
			</when>

			<when test="select == 'contents'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or contents like
							'%${word}%'
						</foreach>
					</where>
				</if>
			</when>

		</choose>
		order by no desc
		limit #{startIndex}, #{size}

	</select>
	<select id="findByNo" resultMap="about" parameterType="int">
		<include refid="select1" />
		from bluead_history
		where no=#{value}
	</select>

	<!-- <select id="findByEmailAndPassword" resultMap="memberMap" parameterType="map"> 
		<include refid="select1"/> from ex_memb where email=#{email} and pwd=password(#{password}) 
		</select> <select id="findByEmail" resultMap="memberMap" parameterType="string"> 
		<include refid="select1"/> from ex_memb where email=#{email} </select> -->
	<select id="countAll" resultType="int">
		select count(*)
		from bluead_history

		<choose>
			<when test="select == 'all'">
				<where> <!-- 이름, 아이디 -->
					or contents like '%${word}%'

				</where>
			</when>

			<when test="select == 'contents'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or contents like
							'%${word}%'
						</foreach>
					</where>
				</if>
			</when>

		</choose>
	</select>
<select id="countAll2" resultType="int">
		select count(*)
		from bluead_history

		<choose>
			<when test="select == 'all'">
				<where> <!-- 이름, 아이디 -->
					or contents like '%${word}%'

				</where>
			</when>

			<when test="select == 'contents'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or contents like
							'%${word}%'
						</foreach>
					</where>
				</if>
			</when>

		</choose>
	</select>
	<!-- <insert id="insert" parameterType="member" useGeneratedKeys="true" 
		keyColumn="no" keyProperty="no"> insert into ex_memb(name,email,pwd,regdt) 
		values(#{name},#{email},password(#{password}),now()) </insert> <update id="update" 
		parameterType="member"> update ex_memb set name=#{name}, email=#{email}, 
		pwd=password(#{password}) where no=#{no} </update> <delete id="delete" parameterType="int"> 
		delete from ex_memb where no=#{value} </delete> -->

</mapper>  









