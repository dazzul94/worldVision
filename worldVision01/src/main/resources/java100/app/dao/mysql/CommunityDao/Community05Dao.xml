<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO 객체를 자동으로 생성하려면, namespace의 값이 인터페이스 이름과 같아야 한다. -->
<mapper namespace="java100.app.dao.CommunityDao.Community05Dao">

	<resultMap type="community05" id="community05">
		<id column="bbs_no" property="bbs_no" />
		<!-- 컬럼 이름과 프로퍼티 이름이 같아서 생략! -->
		<!-- <result column="name" property="name"/> <result column="email" property="email"/> -->
	</resultMap>

	<sql id="select1">
		select
		* 
	</sql>

	<select id="findAll" resultMap="community05" parameterType="map">
		<include refid="select1" />
		from bluead_wv_community05

	
		<choose>
			<when test="select == 'all'">
				<where> <!-- 제목,내용,글쓴이 -->
					or bbs_subject like '%${word}%'
					or bbs_content like '%${word}%'
					or bbs_name like '%${word}%'
				</where>
			</when>

			<when test="select == 'bbs_subject'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or bbs_subject like '%${word}%'
						</foreach>
					</where>
				</if>
			</when>

			<when test="select == 'bbs_content'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or bbs_content like '%${word}%'
						</foreach>
					</where>
				</if>
			</when>
			
			<when test="select == 'bbs_name'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or bbs_name like '%${word}%'
						</foreach>
					</where>
				</if>
			</when>
		</choose>
		order by bbs_no desc
		limit #{startIndex}, #{size}
	</select>
	<select id="findByNo" resultMap="community05" parameterType="int">
		<include refid="select1" />
		from bluead_wv_community05
		where bbs_no=#{value}
	</select>

	<!-- <select id="findByEmailAndPassword" resultMap="memberMap" parameterType="map"> 
		<include refid="select1"/> from ex_memb where email=#{email} and pwd=password(#{password}) 
		</select> <select id="findByEmail" resultMap="memberMap" parameterType="string"> 
		<include refid="select1"/> from ex_memb where email=#{email} </select> -->
	<select id="countAll" resultType="int">
		select count(*) from bluead_wv_community05
			<choose>
			<when test="select == 'all'">
				<where> <!-- 제목,내용,글쓴이 -->
					or bbs_subject like '%${word}%'
					or bbs_content like '%${word}%'
					or bbs_name like '%${word}%'
				</where>
			</when>

			<when test="select == 'bbs_subject'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or bbs_subject like '%${word}%'
						</foreach>
					</where>
				</if>
			</when>

			<when test="select == 'bbs_content'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or bbs_content like '%${word}%'
						</foreach>
					</where>
				</if>
			</when>
			
			<when test="select == 'bbs_name'">
				<if test="words != null">
					<where>
						<foreach collection="words" item="word">
							or bbs_name like '%${word}%'
						</foreach>
					</where>
				</if>
			</when>
		</choose>
	</select>
		

	<!-- <insert id="insert" parameterType="member" useGeneratedKeys="true" 
		keyColumn="no" keyProperty="no"> insert into ex_memb(name,email,pwd,regdt) 
		values(#{name},#{email},password(#{password}),now()) </insert> <update id="update" 
		parameterType="member"> update ex_memb set name=#{name}, email=#{email}, 
		pwd=password(#{password}) where no=#{no} </update> <delete id="delete" parameterType="int"> 
		delete from ex_memb where no=#{value} </delete> -->

</mapper>  









